PAGE OBJECT MODEL (pom)

class BasePage:
    def _init_(self, driver):
        self.driver = driver

    def wait_for_element(self, by, value, timeout=10):
        return WebDriverWait(self.driver, timeout).until(
            EC.presence_of_element_located((by, value))
        )
        class HomePage(BasePage):
    # Define locators for elements on the home page
    search_box = (By.ID, "search")
    search_button = (By.ID, "search-button")

    def search_for_product(self, keyword):
        self.wait_for_element(*self.search_box).send_keys(keyword)
        self.wait_for_element(*self.search_button).click()

class ProductPage(BasePage):
    # Define locators for elements on the product page
    product_title = (By.CSS_SELECTOR, ".product-title")
    add_to_cart_button = (By.ID, "add-to-cart")

    def get_product_title(self):
        return self.wait_for_element(*self.product_title).text

    def add_product_to_cart(self):
        self.wait_for_element(*self.add_to_cart_button).click()

from selenium import webdriver

# Initialize the WebDriver
driver = webdriver.Chrome()
driver.get("https://example.com")

# Create instances of page objects
home_page = HomePage(driver)
product_page = ProductPage(driver)

# Interact with the pages using page object methods
home_page.search_for_product("Selenium")
product_title = product_page.get_product_title()
product_page.add_product_to_cart()

# Perform assertions and further test steps
# ...

# Close the WebDriver
driver.quit()
        
